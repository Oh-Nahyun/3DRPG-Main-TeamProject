//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.7.0
//     from Assets/Input/PlayerinputActions.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @PlayerinputActions: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @PlayerinputActions()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""PlayerinputActions"",
    ""maps"": [
        {
            ""name"": ""Player"",
            ""id"": ""36771dc6-c15a-45cc-93ef-968966bd9911"",
            ""actions"": [
                {
                    ""name"": ""Move"",
                    ""type"": ""Value"",
                    ""id"": ""06e83e1a-20cb-4691-9ada-f1b07842d71c"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Jump"",
                    ""type"": ""Button"",
                    ""id"": ""878fc5c4-0bab-45af-869a-1dd4f1d8d58f"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""b97c8ef1-0359-490d-a1b5-cf72b24d4c67"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Interaction"",
                    ""type"": ""Button"",
                    ""id"": ""be555053-79c5-450a-b69b-466b0526c112"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Use"",
                    ""type"": ""Button"",
                    ""id"": ""44b17fe2-f56a-4e98-96ad-96cc24303dad"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill"",
                    ""type"": ""Button"",
                    ""id"": ""ab5893d2-dcd0-4e7d-9e79-e3a133d99ff5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""MoveModeChange"",
                    ""type"": ""Button"",
                    ""id"": ""da36b7ce-9bee-4692-af78-a9bb2c7c2346"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Slide"",
                    ""type"": ""Button"",
                    ""id"": ""eff423ee-a0c4-4842-84fe-e9f57ba4eb41"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""LookAround"",
                    ""type"": ""Value"",
                    ""id"": ""9f2399c5-e7fa-47ec-bf4c-3a7e3fde67a8"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""ActiveSkillMode"",
                    ""type"": ""Button"",
                    ""id"": ""638aa236-2d4a-45a0-a15d-59e87f47d6b2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open_Inventory"",
                    ""type"": ""Button"",
                    ""id"": ""52134c9e-20b7-481c-aea1-be7c9536cd44"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Get_Item"",
                    ""type"": ""Button"",
                    ""id"": ""a56eaf21-42ee-4ec3-b77c-f0d9e6be4669"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Open_Map"",
                    ""type"": ""Button"",
                    ""id"": ""737a8fdb-fcb5-448e-b8b2-903601f994c1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""6f39ad3e-8b7a-457c-a791-521c9dea1575"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Move"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""00f6e0e6-dec1-4d02-b3c0-3b9d815590da"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""7a7f7ce0-d030-4126-8752-73056747e5cc"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""f7ed4aed-b9e2-4a91-b43d-e917981a9a82"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""185652ba-2128-4ad3-9c34-9072b754dd1d"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Move"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d0462dc3-9ea3-4458-ade4-58236eff9141"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Jump"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5bec6a28-a767-4827-8f5a-66216cfa4f03"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""2e78072a-cb23-4280-abbd-f4cf71d143e3"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Interaction"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c10011a2-a60e-4673-b040-4f3ce0b03d8d"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Use"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b4b7224-3c85-44b4-9ba4-f04399ac18aa"",
                    ""path"": ""<Keyboard>/1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Skill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1100b764-4b86-41e7-a2b5-6abe780dd490"",
                    ""path"": ""<Keyboard>/shift"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""MoveModeChange"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4b87fe25-5ba4-4f6e-be77-4f5abceff61d"",
                    ""path"": ""<Keyboard>/c"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Slide"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""698c88a0-67c6-4953-82ab-6a1749c7d176"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""LookAround"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""a260c4f6-4376-4ec3-8348-04d907d44a98"",
                    ""path"": ""<Keyboard>/tab"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""ActiveSkillMode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""1b119363-828d-41a3-a654-f86b6287922f"",
                    ""path"": ""<Keyboard>/i"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Open_Inventory"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""c5853a7f-60be-4859-a468-d1ee8b6c5bc3"",
                    ""path"": ""<Keyboard>/u"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Get_Item"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5fabfa7f-7294-4607-819f-d3543147a784"",
                    ""path"": ""<Keyboard>/m"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Open_Map"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Weapon"",
            ""id"": ""352c91fb-9f4b-4ccb-8755-0f1791c41b71"",
            ""actions"": [
                {
                    ""name"": ""Attack"",
                    ""type"": ""Button"",
                    ""id"": ""941a3a56-2352-411c-a2ba-79be258c07eb"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Sword Mode"",
                    ""type"": ""Button"",
                    ""id"": ""df5ab539-e7c0-4a08-861f-41ffd1348f22"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Bow Mode"",
                    ""type"": ""Button"",
                    ""id"": ""3e057eaf-1de1-46f8-b70b-c7ace608bcd4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Normal Mode"",
                    ""type"": ""Button"",
                    ""id"": ""ca5dd82f-42b8-4591-9d6b-880e53250c8a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""d6ab1fec-03f5-4d7d-8d68-1e7ee857f909"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Attack"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""5baa57fa-5e9c-4238-83be-18f888adc8ec"",
                    ""path"": ""<Keyboard>/q"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Sword Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bbaa4640-f7b7-462f-926c-00ed7554ea36"",
                    ""path"": ""<Keyboard>/r"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Bow Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""6d0f5d2a-e7fe-4630-94f6-dde7d237cace"",
                    ""path"": ""<Keyboard>/e"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Normal Mode"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""Skill"",
            ""id"": ""e54fc67d-a6ad-4783-847d-7e97276f3e1c"",
            ""actions"": [
                {
                    ""name"": ""LeftClick"",
                    ""type"": ""Button"",
                    ""id"": ""f4794312-4302-42a4-b52a-b82a3c240ed5"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""RightClick"",
                    ""type"": ""Button"",
                    ""id"": ""30e7c0a1-24db-4cc1-981e-5f66af95b89d"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill1"",
                    ""type"": ""Button"",
                    ""id"": ""21b36eef-e7db-4809-8979-1c87349829a4"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill2"",
                    ""type"": ""Button"",
                    ""id"": ""42c8a9a8-d984-4e74-a6e4-383e19d21016"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill3"",
                    ""type"": ""Button"",
                    ""id"": ""c350479b-dd6b-4903-bc14-b63cc34eac9a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill4"",
                    ""type"": ""Button"",
                    ""id"": ""6d638291-8f1c-4629-8f7d-b4f6196e8baa"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Skill5"",
                    ""type"": ""Button"",
                    ""id"": ""67223df8-1be3-42bf-babf-c3ee5cb48441"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""OnSkill"",
                    ""type"": ""Button"",
                    ""id"": ""60905c9a-992f-4f3b-9071-9d76f0bc536b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Throw"",
                    ""type"": ""Button"",
                    ""id"": ""08642136-06f5-4526-8952-f3e9aaa600b1"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Cancel"",
                    ""type"": ""Button"",
                    ""id"": ""671513dc-7c0c-4bb5-a430-9896a8b19779"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialKey1"",
                    ""type"": ""Button"",
                    ""id"": ""9dd2a7b1-b748-4608-b262-a3deda748aba"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""SpecialKey2"",
                    ""type"": ""Button"",
                    ""id"": ""ac4efe34-db19-4f5f-9121-7435f70c266b"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""6320138e-cdc3-4519-beb6-8d32b8aef00e"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""LeftClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""4c71cf94-8682-4921-ac9f-68cf2577396f"",
                    ""path"": ""<Mouse>/rightButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""RightClick"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""347c7bd1-c4c6-4f6b-9354-31d50c913752"",
                    ""path"": ""<Keyboard>/f1"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Skill1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""f46d9ffb-11bb-4b12-92ec-effeb9bdf7e0"",
                    ""path"": ""<Keyboard>/f2"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Skill2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""34bdc270-7b56-4d98-811c-92495900017b"",
                    ""path"": ""<Keyboard>/f3"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Skill3"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""52c43765-ec52-4656-9a89-4bfde80f2afb"",
                    ""path"": ""<Keyboard>/f4"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Skill4"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""ffa5c981-273b-4b28-a2c5-f6ccc757740d"",
                    ""path"": ""<Keyboard>/f5"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Skill5"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""bc678cd6-6a90-41d1-a3bf-e064a02d07d6"",
                    ""path"": ""<Keyboard>/f"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""OnSkill"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b1d2cfa1-3ff7-43a8-9b47-ed17c2968405"",
                    ""path"": ""<Keyboard>/z"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Throw"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""495774ce-268f-485c-bf5e-7c59b7a89a23"",
                    ""path"": ""<Keyboard>/x"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": ""KM"",
                    ""action"": ""Cancel"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""26cb31fe-87e3-47a3-9dc4-d1f6c3f105f8"",
                    ""path"": ""<Keyboard>/rightBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialKey2"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""fb690cff-cbeb-4055-983b-685533afbec6"",
                    ""path"": ""<Keyboard>/leftBracket"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""SpecialKey1"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        },
        {
            ""name"": ""UI"",
            ""id"": ""71e02c91-b80c-449b-90f8-2a7958ff69f3"",
            ""actions"": [
                {
                    ""name"": ""Click"",
                    ""type"": ""Button"",
                    ""id"": ""19d9d04b-c567-404e-9e68-239cf225187e"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""2fceb6b1-70d9-43e5-9b2f-2e4ea1c63907"",
                    ""path"": ""<Mouse>/leftButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Click"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": [
        {
            ""name"": ""KM"",
            ""bindingGroup"": ""KM"",
            ""devices"": [
                {
                    ""devicePath"": ""<Mouse>"",
                    ""isOptional"": false,
                    ""isOR"": false
                },
                {
                    ""devicePath"": ""<Keyboard>"",
                    ""isOptional"": false,
                    ""isOR"": false
                }
            ]
        }
    ]
}");
        // Player
        m_Player = asset.FindActionMap("Player", throwIfNotFound: true);
        m_Player_Move = m_Player.FindAction("Move", throwIfNotFound: true);
        m_Player_Jump = m_Player.FindAction("Jump", throwIfNotFound: true);
        m_Player_Attack = m_Player.FindAction("Attack", throwIfNotFound: true);
        m_Player_Interaction = m_Player.FindAction("Interaction", throwIfNotFound: true);
        m_Player_Use = m_Player.FindAction("Use", throwIfNotFound: true);
        m_Player_Skill = m_Player.FindAction("Skill", throwIfNotFound: true);
        m_Player_MoveModeChange = m_Player.FindAction("MoveModeChange", throwIfNotFound: true);
        m_Player_Slide = m_Player.FindAction("Slide", throwIfNotFound: true);
        m_Player_LookAround = m_Player.FindAction("LookAround", throwIfNotFound: true);
        m_Player_ActiveSkillMode = m_Player.FindAction("ActiveSkillMode", throwIfNotFound: true);
        m_Player_Open_Inventory = m_Player.FindAction("Open_Inventory", throwIfNotFound: true);
        m_Player_Get_Item = m_Player.FindAction("Get_Item", throwIfNotFound: true);
        m_Player_Open_Map = m_Player.FindAction("Open_Map", throwIfNotFound: true);
        // Weapon
        m_Weapon = asset.FindActionMap("Weapon", throwIfNotFound: true);
        m_Weapon_Attack = m_Weapon.FindAction("Attack", throwIfNotFound: true);
        m_Weapon_SwordMode = m_Weapon.FindAction("Sword Mode", throwIfNotFound: true);
        m_Weapon_BowMode = m_Weapon.FindAction("Bow Mode", throwIfNotFound: true);
        m_Weapon_NormalMode = m_Weapon.FindAction("Normal Mode", throwIfNotFound: true);
        // Skill
        m_Skill = asset.FindActionMap("Skill", throwIfNotFound: true);
        m_Skill_LeftClick = m_Skill.FindAction("LeftClick", throwIfNotFound: true);
        m_Skill_RightClick = m_Skill.FindAction("RightClick", throwIfNotFound: true);
        m_Skill_Skill1 = m_Skill.FindAction("Skill1", throwIfNotFound: true);
        m_Skill_Skill2 = m_Skill.FindAction("Skill2", throwIfNotFound: true);
        m_Skill_Skill3 = m_Skill.FindAction("Skill3", throwIfNotFound: true);
        m_Skill_Skill4 = m_Skill.FindAction("Skill4", throwIfNotFound: true);
        m_Skill_Skill5 = m_Skill.FindAction("Skill5", throwIfNotFound: true);
        m_Skill_OnSkill = m_Skill.FindAction("OnSkill", throwIfNotFound: true);
        m_Skill_Throw = m_Skill.FindAction("Throw", throwIfNotFound: true);
        m_Skill_Cancel = m_Skill.FindAction("Cancel", throwIfNotFound: true);
        m_Skill_SpecialKey1 = m_Skill.FindAction("SpecialKey1", throwIfNotFound: true);
        m_Skill_SpecialKey2 = m_Skill.FindAction("SpecialKey2", throwIfNotFound: true);
        // UI
        m_UI = asset.FindActionMap("UI", throwIfNotFound: true);
        m_UI_Click = m_UI.FindAction("Click", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Player
    private readonly InputActionMap m_Player;
    private List<IPlayerActions> m_PlayerActionsCallbackInterfaces = new List<IPlayerActions>();
    private readonly InputAction m_Player_Move;
    private readonly InputAction m_Player_Jump;
    private readonly InputAction m_Player_Attack;
    private readonly InputAction m_Player_Interaction;
    private readonly InputAction m_Player_Use;
    private readonly InputAction m_Player_Skill;
    private readonly InputAction m_Player_MoveModeChange;
    private readonly InputAction m_Player_Slide;
    private readonly InputAction m_Player_LookAround;
    private readonly InputAction m_Player_ActiveSkillMode;
    private readonly InputAction m_Player_Open_Inventory;
    private readonly InputAction m_Player_Get_Item;
    private readonly InputAction m_Player_Open_Map;
    public struct PlayerActions
    {
        private @PlayerinputActions m_Wrapper;
        public PlayerActions(@PlayerinputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Move => m_Wrapper.m_Player_Move;
        public InputAction @Jump => m_Wrapper.m_Player_Jump;
        public InputAction @Attack => m_Wrapper.m_Player_Attack;
        public InputAction @Interaction => m_Wrapper.m_Player_Interaction;
        public InputAction @Use => m_Wrapper.m_Player_Use;
        public InputAction @Skill => m_Wrapper.m_Player_Skill;
        public InputAction @MoveModeChange => m_Wrapper.m_Player_MoveModeChange;
        public InputAction @Slide => m_Wrapper.m_Player_Slide;
        public InputAction @LookAround => m_Wrapper.m_Player_LookAround;
        public InputAction @ActiveSkillMode => m_Wrapper.m_Player_ActiveSkillMode;
        public InputAction @Open_Inventory => m_Wrapper.m_Player_Open_Inventory;
        public InputAction @Get_Item => m_Wrapper.m_Player_Get_Item;
        public InputAction @Open_Map => m_Wrapper.m_Player_Open_Map;
        public InputActionMap Get() { return m_Wrapper.m_Player; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(PlayerActions set) { return set.Get(); }
        public void AddCallbacks(IPlayerActions instance)
        {
            if (instance == null || m_Wrapper.m_PlayerActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Add(instance);
            @Move.started += instance.OnMove;
            @Move.performed += instance.OnMove;
            @Move.canceled += instance.OnMove;
            @Jump.started += instance.OnJump;
            @Jump.performed += instance.OnJump;
            @Jump.canceled += instance.OnJump;
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @Interaction.started += instance.OnInteraction;
            @Interaction.performed += instance.OnInteraction;
            @Interaction.canceled += instance.OnInteraction;
            @Use.started += instance.OnUse;
            @Use.performed += instance.OnUse;
            @Use.canceled += instance.OnUse;
            @Skill.started += instance.OnSkill;
            @Skill.performed += instance.OnSkill;
            @Skill.canceled += instance.OnSkill;
            @MoveModeChange.started += instance.OnMoveModeChange;
            @MoveModeChange.performed += instance.OnMoveModeChange;
            @MoveModeChange.canceled += instance.OnMoveModeChange;
            @Slide.started += instance.OnSlide;
            @Slide.performed += instance.OnSlide;
            @Slide.canceled += instance.OnSlide;
            @LookAround.started += instance.OnLookAround;
            @LookAround.performed += instance.OnLookAround;
            @LookAround.canceled += instance.OnLookAround;
            @ActiveSkillMode.started += instance.OnActiveSkillMode;
            @ActiveSkillMode.performed += instance.OnActiveSkillMode;
            @ActiveSkillMode.canceled += instance.OnActiveSkillMode;
            @Open_Inventory.started += instance.OnOpen_Inventory;
            @Open_Inventory.performed += instance.OnOpen_Inventory;
            @Open_Inventory.canceled += instance.OnOpen_Inventory;
            @Get_Item.started += instance.OnGet_Item;
            @Get_Item.performed += instance.OnGet_Item;
            @Get_Item.canceled += instance.OnGet_Item;
            @Open_Map.started += instance.OnOpen_Map;
            @Open_Map.performed += instance.OnOpen_Map;
            @Open_Map.canceled += instance.OnOpen_Map;
        }

        private void UnregisterCallbacks(IPlayerActions instance)
        {
            @Move.started -= instance.OnMove;
            @Move.performed -= instance.OnMove;
            @Move.canceled -= instance.OnMove;
            @Jump.started -= instance.OnJump;
            @Jump.performed -= instance.OnJump;
            @Jump.canceled -= instance.OnJump;
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @Interaction.started -= instance.OnInteraction;
            @Interaction.performed -= instance.OnInteraction;
            @Interaction.canceled -= instance.OnInteraction;
            @Use.started -= instance.OnUse;
            @Use.performed -= instance.OnUse;
            @Use.canceled -= instance.OnUse;
            @Skill.started -= instance.OnSkill;
            @Skill.performed -= instance.OnSkill;
            @Skill.canceled -= instance.OnSkill;
            @MoveModeChange.started -= instance.OnMoveModeChange;
            @MoveModeChange.performed -= instance.OnMoveModeChange;
            @MoveModeChange.canceled -= instance.OnMoveModeChange;
            @Slide.started -= instance.OnSlide;
            @Slide.performed -= instance.OnSlide;
            @Slide.canceled -= instance.OnSlide;
            @LookAround.started -= instance.OnLookAround;
            @LookAround.performed -= instance.OnLookAround;
            @LookAround.canceled -= instance.OnLookAround;
            @ActiveSkillMode.started -= instance.OnActiveSkillMode;
            @ActiveSkillMode.performed -= instance.OnActiveSkillMode;
            @ActiveSkillMode.canceled -= instance.OnActiveSkillMode;
            @Open_Inventory.started -= instance.OnOpen_Inventory;
            @Open_Inventory.performed -= instance.OnOpen_Inventory;
            @Open_Inventory.canceled -= instance.OnOpen_Inventory;
            @Get_Item.started -= instance.OnGet_Item;
            @Get_Item.performed -= instance.OnGet_Item;
            @Get_Item.canceled -= instance.OnGet_Item;
            @Open_Map.started -= instance.OnOpen_Map;
            @Open_Map.performed -= instance.OnOpen_Map;
            @Open_Map.canceled -= instance.OnOpen_Map;
        }

        public void RemoveCallbacks(IPlayerActions instance)
        {
            if (m_Wrapper.m_PlayerActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IPlayerActions instance)
        {
            foreach (var item in m_Wrapper.m_PlayerActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_PlayerActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public PlayerActions @Player => new PlayerActions(this);

    // Weapon
    private readonly InputActionMap m_Weapon;
    private List<IWeaponActions> m_WeaponActionsCallbackInterfaces = new List<IWeaponActions>();
    private readonly InputAction m_Weapon_Attack;
    private readonly InputAction m_Weapon_SwordMode;
    private readonly InputAction m_Weapon_BowMode;
    private readonly InputAction m_Weapon_NormalMode;
    public struct WeaponActions
    {
        private @PlayerinputActions m_Wrapper;
        public WeaponActions(@PlayerinputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Attack => m_Wrapper.m_Weapon_Attack;
        public InputAction @SwordMode => m_Wrapper.m_Weapon_SwordMode;
        public InputAction @BowMode => m_Wrapper.m_Weapon_BowMode;
        public InputAction @NormalMode => m_Wrapper.m_Weapon_NormalMode;
        public InputActionMap Get() { return m_Wrapper.m_Weapon; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(WeaponActions set) { return set.Get(); }
        public void AddCallbacks(IWeaponActions instance)
        {
            if (instance == null || m_Wrapper.m_WeaponActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_WeaponActionsCallbackInterfaces.Add(instance);
            @Attack.started += instance.OnAttack;
            @Attack.performed += instance.OnAttack;
            @Attack.canceled += instance.OnAttack;
            @SwordMode.started += instance.OnSwordMode;
            @SwordMode.performed += instance.OnSwordMode;
            @SwordMode.canceled += instance.OnSwordMode;
            @BowMode.started += instance.OnBowMode;
            @BowMode.performed += instance.OnBowMode;
            @BowMode.canceled += instance.OnBowMode;
            @NormalMode.started += instance.OnNormalMode;
            @NormalMode.performed += instance.OnNormalMode;
            @NormalMode.canceled += instance.OnNormalMode;
        }

        private void UnregisterCallbacks(IWeaponActions instance)
        {
            @Attack.started -= instance.OnAttack;
            @Attack.performed -= instance.OnAttack;
            @Attack.canceled -= instance.OnAttack;
            @SwordMode.started -= instance.OnSwordMode;
            @SwordMode.performed -= instance.OnSwordMode;
            @SwordMode.canceled -= instance.OnSwordMode;
            @BowMode.started -= instance.OnBowMode;
            @BowMode.performed -= instance.OnBowMode;
            @BowMode.canceled -= instance.OnBowMode;
            @NormalMode.started -= instance.OnNormalMode;
            @NormalMode.performed -= instance.OnNormalMode;
            @NormalMode.canceled -= instance.OnNormalMode;
        }

        public void RemoveCallbacks(IWeaponActions instance)
        {
            if (m_Wrapper.m_WeaponActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IWeaponActions instance)
        {
            foreach (var item in m_Wrapper.m_WeaponActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_WeaponActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public WeaponActions @Weapon => new WeaponActions(this);

    // Skill
    private readonly InputActionMap m_Skill;
    private List<ISkillActions> m_SkillActionsCallbackInterfaces = new List<ISkillActions>();
    private readonly InputAction m_Skill_LeftClick;
    private readonly InputAction m_Skill_RightClick;
    private readonly InputAction m_Skill_Skill1;
    private readonly InputAction m_Skill_Skill2;
    private readonly InputAction m_Skill_Skill3;
    private readonly InputAction m_Skill_Skill4;
    private readonly InputAction m_Skill_Skill5;
    private readonly InputAction m_Skill_OnSkill;
    private readonly InputAction m_Skill_Throw;
    private readonly InputAction m_Skill_Cancel;
    private readonly InputAction m_Skill_SpecialKey1;
    private readonly InputAction m_Skill_SpecialKey2;
    public struct SkillActions
    {
        private @PlayerinputActions m_Wrapper;
        public SkillActions(@PlayerinputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @LeftClick => m_Wrapper.m_Skill_LeftClick;
        public InputAction @RightClick => m_Wrapper.m_Skill_RightClick;
        public InputAction @Skill1 => m_Wrapper.m_Skill_Skill1;
        public InputAction @Skill2 => m_Wrapper.m_Skill_Skill2;
        public InputAction @Skill3 => m_Wrapper.m_Skill_Skill3;
        public InputAction @Skill4 => m_Wrapper.m_Skill_Skill4;
        public InputAction @Skill5 => m_Wrapper.m_Skill_Skill5;
        public InputAction @OnSkill => m_Wrapper.m_Skill_OnSkill;
        public InputAction @Throw => m_Wrapper.m_Skill_Throw;
        public InputAction @Cancel => m_Wrapper.m_Skill_Cancel;
        public InputAction @SpecialKey1 => m_Wrapper.m_Skill_SpecialKey1;
        public InputAction @SpecialKey2 => m_Wrapper.m_Skill_SpecialKey2;
        public InputActionMap Get() { return m_Wrapper.m_Skill; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(SkillActions set) { return set.Get(); }
        public void AddCallbacks(ISkillActions instance)
        {
            if (instance == null || m_Wrapper.m_SkillActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_SkillActionsCallbackInterfaces.Add(instance);
            @LeftClick.started += instance.OnLeftClick;
            @LeftClick.performed += instance.OnLeftClick;
            @LeftClick.canceled += instance.OnLeftClick;
            @RightClick.started += instance.OnRightClick;
            @RightClick.performed += instance.OnRightClick;
            @RightClick.canceled += instance.OnRightClick;
            @Skill1.started += instance.OnSkill1;
            @Skill1.performed += instance.OnSkill1;
            @Skill1.canceled += instance.OnSkill1;
            @Skill2.started += instance.OnSkill2;
            @Skill2.performed += instance.OnSkill2;
            @Skill2.canceled += instance.OnSkill2;
            @Skill3.started += instance.OnSkill3;
            @Skill3.performed += instance.OnSkill3;
            @Skill3.canceled += instance.OnSkill3;
            @Skill4.started += instance.OnSkill4;
            @Skill4.performed += instance.OnSkill4;
            @Skill4.canceled += instance.OnSkill4;
            @Skill5.started += instance.OnSkill5;
            @Skill5.performed += instance.OnSkill5;
            @Skill5.canceled += instance.OnSkill5;
            @OnSkill.started += instance.OnOnSkill;
            @OnSkill.performed += instance.OnOnSkill;
            @OnSkill.canceled += instance.OnOnSkill;
            @Throw.started += instance.OnThrow;
            @Throw.performed += instance.OnThrow;
            @Throw.canceled += instance.OnThrow;
            @Cancel.started += instance.OnCancel;
            @Cancel.performed += instance.OnCancel;
            @Cancel.canceled += instance.OnCancel;
            @SpecialKey1.started += instance.OnSpecialKey1;
            @SpecialKey1.performed += instance.OnSpecialKey1;
            @SpecialKey1.canceled += instance.OnSpecialKey1;
            @SpecialKey2.started += instance.OnSpecialKey2;
            @SpecialKey2.performed += instance.OnSpecialKey2;
            @SpecialKey2.canceled += instance.OnSpecialKey2;
        }

        private void UnregisterCallbacks(ISkillActions instance)
        {
            @LeftClick.started -= instance.OnLeftClick;
            @LeftClick.performed -= instance.OnLeftClick;
            @LeftClick.canceled -= instance.OnLeftClick;
            @RightClick.started -= instance.OnRightClick;
            @RightClick.performed -= instance.OnRightClick;
            @RightClick.canceled -= instance.OnRightClick;
            @Skill1.started -= instance.OnSkill1;
            @Skill1.performed -= instance.OnSkill1;
            @Skill1.canceled -= instance.OnSkill1;
            @Skill2.started -= instance.OnSkill2;
            @Skill2.performed -= instance.OnSkill2;
            @Skill2.canceled -= instance.OnSkill2;
            @Skill3.started -= instance.OnSkill3;
            @Skill3.performed -= instance.OnSkill3;
            @Skill3.canceled -= instance.OnSkill3;
            @Skill4.started -= instance.OnSkill4;
            @Skill4.performed -= instance.OnSkill4;
            @Skill4.canceled -= instance.OnSkill4;
            @Skill5.started -= instance.OnSkill5;
            @Skill5.performed -= instance.OnSkill5;
            @Skill5.canceled -= instance.OnSkill5;
            @OnSkill.started -= instance.OnOnSkill;
            @OnSkill.performed -= instance.OnOnSkill;
            @OnSkill.canceled -= instance.OnOnSkill;
            @Throw.started -= instance.OnThrow;
            @Throw.performed -= instance.OnThrow;
            @Throw.canceled -= instance.OnThrow;
            @Cancel.started -= instance.OnCancel;
            @Cancel.performed -= instance.OnCancel;
            @Cancel.canceled -= instance.OnCancel;
            @SpecialKey1.started -= instance.OnSpecialKey1;
            @SpecialKey1.performed -= instance.OnSpecialKey1;
            @SpecialKey1.canceled -= instance.OnSpecialKey1;
            @SpecialKey2.started -= instance.OnSpecialKey2;
            @SpecialKey2.performed -= instance.OnSpecialKey2;
            @SpecialKey2.canceled -= instance.OnSpecialKey2;
        }

        public void RemoveCallbacks(ISkillActions instance)
        {
            if (m_Wrapper.m_SkillActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(ISkillActions instance)
        {
            foreach (var item in m_Wrapper.m_SkillActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_SkillActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public SkillActions @Skill => new SkillActions(this);

    // UI
    private readonly InputActionMap m_UI;
    private List<IUIActions> m_UIActionsCallbackInterfaces = new List<IUIActions>();
    private readonly InputAction m_UI_Click;
    public struct UIActions
    {
        private @PlayerinputActions m_Wrapper;
        public UIActions(@PlayerinputActions wrapper) { m_Wrapper = wrapper; }
        public InputAction @Click => m_Wrapper.m_UI_Click;
        public InputActionMap Get() { return m_Wrapper.m_UI; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(UIActions set) { return set.Get(); }
        public void AddCallbacks(IUIActions instance)
        {
            if (instance == null || m_Wrapper.m_UIActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_UIActionsCallbackInterfaces.Add(instance);
            @Click.started += instance.OnClick;
            @Click.performed += instance.OnClick;
            @Click.canceled += instance.OnClick;
        }

        private void UnregisterCallbacks(IUIActions instance)
        {
            @Click.started -= instance.OnClick;
            @Click.performed -= instance.OnClick;
            @Click.canceled -= instance.OnClick;
        }

        public void RemoveCallbacks(IUIActions instance)
        {
            if (m_Wrapper.m_UIActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IUIActions instance)
        {
            foreach (var item in m_Wrapper.m_UIActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_UIActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public UIActions @UI => new UIActions(this);
    private int m_KMSchemeIndex = -1;
    public InputControlScheme KMScheme
    {
        get
        {
            if (m_KMSchemeIndex == -1) m_KMSchemeIndex = asset.FindControlSchemeIndex("KM");
            return asset.controlSchemes[m_KMSchemeIndex];
        }
    }
    public interface IPlayerActions
    {
        void OnMove(InputAction.CallbackContext context);
        void OnJump(InputAction.CallbackContext context);
        void OnAttack(InputAction.CallbackContext context);
        void OnInteraction(InputAction.CallbackContext context);
        void OnUse(InputAction.CallbackContext context);
        void OnSkill(InputAction.CallbackContext context);
        void OnMoveModeChange(InputAction.CallbackContext context);
        void OnSlide(InputAction.CallbackContext context);
        void OnLookAround(InputAction.CallbackContext context);
        void OnActiveSkillMode(InputAction.CallbackContext context);
        void OnOpen_Inventory(InputAction.CallbackContext context);
        void OnGet_Item(InputAction.CallbackContext context);
        void OnOpen_Map(InputAction.CallbackContext context);
    }
    public interface IWeaponActions
    {
        void OnAttack(InputAction.CallbackContext context);
        void OnSwordMode(InputAction.CallbackContext context);
        void OnBowMode(InputAction.CallbackContext context);
        void OnNormalMode(InputAction.CallbackContext context);
    }
    public interface ISkillActions
    {
        void OnLeftClick(InputAction.CallbackContext context);
        void OnRightClick(InputAction.CallbackContext context);
        void OnSkill1(InputAction.CallbackContext context);
        void OnSkill2(InputAction.CallbackContext context);
        void OnSkill3(InputAction.CallbackContext context);
        void OnSkill4(InputAction.CallbackContext context);
        void OnSkill5(InputAction.CallbackContext context);
        void OnOnSkill(InputAction.CallbackContext context);
        void OnThrow(InputAction.CallbackContext context);
        void OnCancel(InputAction.CallbackContext context);
        void OnSpecialKey1(InputAction.CallbackContext context);
        void OnSpecialKey2(InputAction.CallbackContext context);
    }
    public interface IUIActions
    {
        void OnClick(InputAction.CallbackContext context);
    }
}
